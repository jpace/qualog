buildscript {
    repositories {
        jcenter()
    }
    dependencies {
    }
}

plugins {
    id 'com.jfrog.bintray' version '1.3.1'
}

apply plugin: 'java'

group = 'org.qualog'
version ='3.0.1'
sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    pkgName = 'qualog'
    pkgDesc = 'Quasi Logging'
    githubRepo = 'github.com/jpace/qualog'
    pkgLicense = 'MIT'
    pkgLicenseUrl = 'https://mit-license.org/'
    devInfo = {
        id 'jpace'
        name 'Jeff Pace'
        url 'https://github.com/jpace'
        email 'jeugenepace@gmail'
    }
    bintrayUser = System.getenv('BINTRAY_USER')
    bintrayKey = System.getenv('BINTRAY_API_KEY')
    mavenUserToken = System.getenv('MAVEN_USER_TOKEN')
    mavenUserPass = System.getenv('MAVEN_USER_PASS')
    deployDryRun = false
}
apply from: 'deploy.gradle'

dependencies {
    compile 'org.incava:ijdk:3.8.1'
    testCompile 'org.incava:attest:[0.0.4,)'
    testCompile 'pl.pragmatists:JUnitParams:1.0.6'
    testCompile('junit:junit:[4.13.1,') {
        exclude group: 'org.hamcrest'
    }
    testCompile('org.mockito:mockito-core:1.10.19') {
        exclude group: 'org.hamcrest'
    }
    testCompile 'org.hamcrest:hamcrest-library:1.3'
}

allprojects {
    tasks.withType(JavaCompile).all { JavaCompile compile ->
        compile.options.debug = true
        compile.options.compilerArgs = ['-Xlint:all']
    }
}

test {
    excludes = [ '**/test/TestCaseExt*' ]
    testLogging {
        exceptionFormat = "full"
    }
    scanForTestClasses = true
}

logging.captureStandardOutput LogLevel.ERROR
